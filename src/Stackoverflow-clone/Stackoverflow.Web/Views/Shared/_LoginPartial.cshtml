@using Stackoverflow.Infrastructure.Membership
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a id="profile-link" class="nav-link text-dark" title="Manage">Hello @User.Identity?.Name!</a>
        </li>

        <li class="nav-item">
            <form class="form-inline" asp-area="" asp-controller="Account" asp-action="Logout" asp-route-returnUrl="@Url.Action("Index", "Post", new { area = "User" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-controller="Account" asp-action="Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-controller="Account" asp-action="Login">Login</a>
        </li>
    }
</ul>
<script>
    document.getElementById("profile-link").addEventListener("click", function (e) {
        e.preventDefault();
        var userId = "@(UserManager.GetUserId(User))";
        if (userId) {
            console.log("userId: " + userId); // Log userId to console for debugging
            window.location.href = "/Account/Manage?userId=" + userId;
        } else {
            console.error("User ID not available.");
            // Handle the case where user ID is not available, maybe display an error message.
        }
    });
</script>

